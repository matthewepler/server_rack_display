// connection 
var socket;

// data 
var cpuLoad, ramUse, cpuTemp;

// drawing 
var palettes;

// objects
var osc, fft;


function setup() {
	createCanvas(500, 500);
	// createCanvas(3840, 716);
	initEnvironment();

	osc = new p5.Oscillator();
	osc.setType('sine');
	osc.amp(0.5);
	osc.freq(100);
	osc.start();

	fft = new p5.FFT();
	fft.smooth(0.1);
}

function draw() {
	background(0);
	noFill();
	strokeWeight(40);

	var waveform = fft.waveform();
	beginShape();
	for (var i=0; i<waveform.length; i++) {
			var x = map(i, 0, waveform.length, 0, width);
			var y = map(waveform[i], -1, 1, height, 0);
			vertex(x, y);
	}
	endShape();
}

function createObjects() { // assing vars to object attr.
	// cpuLoad = frequency
	var freq = map(cpuLoad, 0, 1, 40, 880);
	osc.freq(freq);

	// cpuTemp = color
	var palette = floor( map(cpuTemp, 0, 1, 0, 5));
	stroke(palettes[palette]);
	console.log(palettes[palette]);

	// ramUse = amplitude
	var amp = map(ramUse, 0, 1, 0.1, 1);
	osc.amp(amp);
}

function renderData(data) {
	//console.log(JSON.stringify(data));

	cpuLoad = data.cpuLoad / 100;	// normalize, incoming 0-100
	ramUse  = data.ramUse  / 100;
	cpuTemp = data.cpuTemp / 100;
	
	createObjects();
}

function drawStandby() {
	push();
		translate(width/2, height/2);
		fill(9,80,255);
		noStroke();
		rotate(angle);
		ellipse(125, 0, 30, 30);
		fill(9,80,255, 200);
		rotate(angle-5);
		ellipse(125, 0, 30, 30);

	pop();
	angle >= 360 ? angle=0 : angle += 2;
}

function keyPressed() {
	if (key =='1') {
		resizeCanvas(3840, 716);
	} else if (key = '2') {
		resizeCanvas(500, 500);
	}
}

function initEnvironment() {
	background(0);
	initPalettes();

	setTimeout( function() {
		socket = io.connect('http://localhost:3000');
		// socket = io(); // alternative instatiator
		socket.on('render', renderData);
		socket.on('connected', initConnection);
		socket.on('disconnected', closeConnection);
	}, 500);

	// data 
	cpuLoad, ramUse, cpuTemp = 0;

	// drawing
	angle = 0;
	angleMode(DEGREES);

	// objects
	objects = [];

}

function initPalettes() { // if you change number of palettes/color, be sure to also change variables in createBars();
	palettes = ['rgb(9, 80, 255)','rgb(26, 234, 167)','rgb(20, 233, 60)','rgb(241, 102, 13)', 'rgb(255, 0, 0)'];
}


function initConnection(data) {
	console.log(data);
}

function closeConnection(data) {
	console.log(data);
}


